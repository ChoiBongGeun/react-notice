[{"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\index.js":"1","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\App.js":"2","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\reportWebVitals.js":"3","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\route\\RouterComponent.jsx":"4","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\ApiService.js":"5","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\route\\NavBar.jsx":"6","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\main.jsx":"7","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\read.jsx":"8","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\add.jsx":"9","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\update.jsx":"10","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\adduser.jsx":"11","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\login.jsx":"12","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\forgot.jsx":"13","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\mycontent.jsx":"14","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\userinfo.jsx":"15","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\check.jsx":"16","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\changepw.jsx":"17"},{"size":517,"mtime":1610357024756,"results":"18","hashOfConfig":"19"},{"size":361,"mtime":1610357024756,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1610357024756,"results":"21","hashOfConfig":"19"},{"size":1446,"mtime":1610357024756,"results":"22","hashOfConfig":"19"},{"size":1396,"mtime":1610357024756,"results":"23","hashOfConfig":"19"},{"size":1894,"mtime":1610357024756,"results":"24","hashOfConfig":"19"},{"size":3360,"mtime":1610357024756,"results":"25","hashOfConfig":"19"},{"size":2891,"mtime":1610362189347,"results":"26","hashOfConfig":"19"},{"size":2220,"mtime":1610357024756,"results":"27","hashOfConfig":"19"},{"size":2862,"mtime":1610357024756,"results":"28","hashOfConfig":"19"},{"size":4780,"mtime":1610362609564,"results":"29","hashOfConfig":"19"},{"size":3756,"mtime":1610362792097,"results":"30","hashOfConfig":"19"},{"size":5966,"mtime":1610357024772,"results":"31","hashOfConfig":"19"},{"size":3402,"mtime":1610357024756,"results":"32","hashOfConfig":"19"},{"size":4872,"mtime":1610362771900,"results":"33","hashOfConfig":"19"},{"size":2849,"mtime":1610362756316,"results":"34","hashOfConfig":"19"},{"size":3480,"mtime":1610362643857,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"2bhftt",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\index.js",[],["75","76"],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\App.js",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\reportWebVitals.js",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\route\\RouterComponent.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\ApiService.js",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\route\\NavBar.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\main.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\read.jsx",["77","78","79"],"import React, { Component } from 'react';\r\nimport ApiService from \"../ApiService\";\r\n\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nclass read extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n          bno: this.props.location.search.split(\"=\")[1],\r\n          title: '',\r\n          content: '',\r\n          writer: '',\r\n          message: null\r\n        }\r\n      }\r\n    \r\n      componentDidMount(){\r\n        if(!window.sessionStorage.getItem(\"id\")){\r\n          document.location.href = \"/\";\r\n          alert(\"잘못된 접근\")\r\n        }\r\n        else{\r\n        this.reloadcontentList();\r\n        }\r\n      }\r\n  \r\n     \r\n      reloadcontentList = () => {\r\n        ApiService.readcontent(this.state.bno)\r\n          .then( res => {\r\n            if(res.data==\"fail\"){\r\n              alert(\"잘못된 접근입니다\")\r\n              this.props.history.push('/main');\r\n            }\r\n            else{\r\n            let content = res.data;\r\n            this.setState({\r\n                bno: content.bno,\r\n                title: content.title,\r\n                content: content.content,\r\n                writer: content.writer\r\n            })\r\n          }\r\n          })\r\n          .catch(err => {\r\n            console.log('reloadUserList() Error!', err);\r\n          })\r\n          \r\n      }\r\n  \r\n    \r\n      modify = (bno) => {\r\n        this.props.history.push('/update?bno='+bno);\r\n      }\r\n      remove = (bno) => {\r\n        ApiService.deletecontent(bno)\r\n        document.location.href = \"/main\"\r\n      }\r\n      list = () => {\r\n        this.props.history.push('/main');\r\n      }\r\n    \r\n  render(){\r\n\r\n    return(\r\n        <div>\r\n        <form>\r\n            <TextField type=\"text\" name=\"username\" readOnly={true} fullWidth margin=\"normal\" value={this.state.title} disabled />\r\n\r\n            <TextField placeholder=\"Edit your first name\" name=\"firstName\" fullWidth margin=\"normal\" value={this.state.content} disabled />\r\n\r\n            <TextField placeholder=\"Edit your last name\" name=\"lastName\" fullWidth margin=\"normal\" value={this.state.writer} disabled />\r\n\r\n        </form>\r\n        {window.sessionStorage.getItem(\"id\")==this.state.writer &&\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={()=> this.modify(this.state.bno)}>수정</Button>\r\n          <Button variant=\"contained\" color=\"primary\"onClick={()=> this.remove(this.state.bno)}>삭제</Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.list}>목록</Button>\r\n        </div>\r\n       }\r\n       {window.sessionStorage.getItem(\"id\")!=this.state.writer &&\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.list}>목록</Button>\r\n        </div>\r\n  }\r\n      </div>\r\n    );\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default read;","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\add.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\update.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\adduser.jsx",["80"],"import React,{Component} from 'react';\r\nimport ApiService from \"../ApiService\";\r\nimport { Paper, withStyles, Grid, TextField, Button} from '@material-ui/core';\r\nimport { Face, Fingerprint,Email,AccountCircle} from '@material-ui/icons'\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    }\r\n});\r\n\r\n\r\nclass adduser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n          id:'',\r\n          password:'',\r\n          username:'',\r\n          email:'',\r\n          message: null\r\n        }\r\n      }\r\n      onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name] : e.target.value\r\n        })\r\n      }\r\n    \r\n    \r\n      login = () => {\r\n        this.props.history.push('/');\r\n      }\r\n      forgotuser = () => {\r\n        this.props.history.push('/forgot');\r\n      }\r\n    \r\n      saveuser = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let user = {\r\n            id:this.state.id,\r\n            password:this.state.password,\r\n            username:this.state.username,\r\n            email:this.state.email\r\n\r\n        }\r\n        \r\n        ApiService.checkuser(user) \r\n        .then( res => {\r\n            if(res.data==\"success\"){\r\n                alert(\"id 중복입니다\")\r\n            }\r\n            else{\r\n                ApiService.adduser(user)\r\n                this.props.history.push('/');\r\n          }\r\n          })\r\n          .catch(err => {\r\n            console.log('reloadUserList() Error!', err);\r\n          })\r\n          \r\n    \r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper className={classes.padding}>\r\n                <div className={classes.margin}>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Face />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"UserID\" type=\"text\" name=\"id\" value={this.state.id} fullWidth autoFocus required onChange={this.onChange} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Fingerprint />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"UserPassword\" type=\"password\"name=\"password\" value={this.state.password} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <AccountCircle />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"Username\" type=\"text\"name=\"username\" value={this.state.username} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Email />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"email\" type=\"text\"name=\"email\" value={this.state.email} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                        <Grid item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\" onClick={this.forgotuser}>이미 가입했는데 비번 또는 아이디가 생각 안나시나요?</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.saveuser}>가입</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.login}>취소</Button>\r\n                    </Grid>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(adduser);","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\login.jsx",["81"],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\forgot.jsx",["82","83"],"import React,{Component} from 'react';\r\nimport ApiService from \"../ApiService\";\r\nimport { Paper, withStyles, Grid, TextField, Button} from '@material-ui/core';\r\nimport { Face,Email,AccountCircle} from '@material-ui/icons'\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    }\r\n});\r\n\r\n\r\nclass adduser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n          pwid:'',\r\n          password:'',\r\n          pwusername:'',\r\n          pwemail:'',\r\n          idusername:'',\r\n          idemail:'',\r\n          message: null\r\n        }\r\n\r\n      }\r\n      onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name] : e.target.value\r\n        })\r\n      }\r\n    \r\n    \r\n      login = () => {\r\n        this.props.history.push('/');\r\n      }\r\n    \r\n      forgotpw = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let user = {\r\n            id:this.state.pwid,\r\n            username:this.state.pwusername,\r\n            email:this.state.pwemail\r\n\r\n        }\r\n    \r\n        ApiService.forgotpw(user)\r\n        .then( res => {\r\n            if(res.data==\"fail\"){\r\n                alert(\"잘못된 접근입니다\")\r\n              }\r\n            else{\r\n            alert(\"pw는\"+res.data.password)\r\n            document.location.href = \"/\"\r\n            }\r\n        })\r\n        .catch( err => {\r\n          console.log('saveUser() 에러', err);\r\n        });\r\n    \r\n      }\r\n      forgotid = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let user = {\r\n            username:this.state.idusername,\r\n            email:this.state.idemail\r\n\r\n        }\r\n    \r\n        ApiService.forgotid(user)\r\n        .then( res => {\r\n            if(res.data==\"fail\"){\r\n                alert(\"잘못된 접근입니다\")\r\n              }\r\n            else{\r\n            alert(\"id는\"+res.data.id)\r\n            document.location.href = \"/\"\r\n            }\r\n        })\r\n        .catch( err => {\r\n          console.log('saveUser() 에러', err);\r\n        });\r\n    \r\n      }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper className={classes.padding}>\r\n                <div className={classes.margin} style ={{width: \"45%\",float:\"left\"}}>\r\n                <h2 algin=\"center\">비번이 생각안나시나요?</h2>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Face />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"UserID\" type=\"text\" name=\"pwid\" value={this.state.pwid} fullWidth autoFocus required onChange={this.onChange} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <AccountCircle />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"Username\" type=\"text\"name=\"pwusername\" value={this.state.pwusername} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Email />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"email\" type=\"text\"name=\"pwemail\" value={this.state.pwemail} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.forgotpw}>비번찾기</Button>\r\n                    </Grid>\r\n                </div>\r\n                <div className={classes.margin} style ={{width: \"45%\",float:\"right\"}}>\r\n                <h2 algin=\"center\">아이디가 생각안나시나요?</h2>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                        <AccountCircle />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"Username\" type=\"text\"name=\"idusername\" value={this.state.idusername} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Email />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"email\" type=\"text\"name=\"idemail\" value={this.state.idemail} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.forgotid}>아이디 찾기</Button>\r\n                    </Grid>\r\n                </div>\r\n                <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.login}>취소</Button>\r\n                    </Grid>\r\n            </Paper>\r\n        \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(adduser);","C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\content\\mycontent.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\userinfo.jsx",[],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\check.jsx",["84"],"C:\\Users\\dhy00\\Documents\\GitHub\\react-notice\\front\\src\\user\\changepw.jsx",["85"],"import React,{Component} from 'react';\r\nimport ApiService from \"../ApiService\";\r\nimport { Paper, withStyles, Grid, TextField, Button} from '@material-ui/core';\r\nimport { Fingerprint} from '@material-ui/icons'\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    }\r\n});\r\n\r\n\r\nclass adduser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            password:'',\r\n            newpw:'',\r\n          message: null\r\n        }\r\n      }\r\n      componentDidMount(){\r\n        if(!window.sessionStorage.getItem(\"id\")){\r\n          document.location.href = \"/\";\r\n          alert(\"잘못된 접근\")\r\n        }\r\n      }\r\n     \r\n      checkpw = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let user = {\r\n            id:window.sessionStorage.getItem(\"id\"),\r\n            password:this.state.password,\r\n        }\r\n        ApiService.loginuser(user)\r\n        .then( res => {\r\n        if(res.data==\"fail\"){\r\n            alert(\"비번이 틀렸습니다\")\r\n        }\r\n        else{\r\n            let user = {\r\n                id:window.sessionStorage.getItem(\"id\"),\r\n                password:this.state.newpw,\r\n            }\r\n            ApiService.changepw(user)\r\n            window.sessionStorage.clear();\r\n            document.location.href = \"/\"\r\n          \r\n        }\r\n        })\r\n    \r\n        .catch(err => {\r\n          console.log('reloadUserList() Error!', err);\r\n        })\r\n    }\r\n\r\n      onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name] : e.target.value\r\n        })\r\n      }\r\n    \r\n    \r\n      content = () => {\r\n        this.props.history.push('/main');\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper className={classes.padding}>\r\n                <div className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Fingerprint />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"지금 비밀번호를 적어주세요\" type=\"password\"name=\"password\" value={this.state.password} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Fingerprint />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"새로운 비밀번호를 적어주세요\" type=\"password\"name=\"newpw\" value={this.state.newpw} onChange={this.onChange} fullWidth autoFocus required/>\r\n                        </Grid>\r\n                    <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.checkpw}>수정</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={this.content}>취소</Button>\r\n                    </Grid>\r\n                    </Grid>\r\n                    </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(adduser);",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":38,"column":24,"nodeType":"92","messageId":"93","endLine":38,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":82,"column":45,"nodeType":"92","messageId":"93","endLine":82,"endColumn":47},{"ruleId":"90","severity":1,"message":"94","line":89,"column":44,"nodeType":"92","messageId":"93","endLine":89,"endColumn":46},{"ruleId":"90","severity":1,"message":"91","line":54,"column":24,"nodeType":"92","messageId":"93","endLine":54,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":49,"column":24,"nodeType":"92","messageId":"93","endLine":49,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":53,"column":24,"nodeType":"92","messageId":"93","endLine":53,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":77,"column":24,"nodeType":"92","messageId":"93","endLine":77,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":43,"column":20,"nodeType":"92","messageId":"93","endLine":43,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":41,"column":20,"nodeType":"92","messageId":"93","endLine":41,"endColumn":22},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]